React, { useState}를 'react'에서 가져옵니다;
'루시드 반응'에서 {Volume2, SkipBack, SkipForward} 가져오기;

const MusicPlayer = () => {
 const [volume, setVolume] = useState(100);
 const [showVolume, setShowVolume] = useState(거짓);
 const [isPlaying, setIsPlaying] = useState(거짓);
 const [currentTrackIndex, setCurrentTrackIndex] = useState(0);

 const tracks = [
 {
 name: "유령도쿄",
 videoId: "VIDEO_ID_1",
 lyrics: "잃어버리는 것에 익숙해져 가는 가운데"
 }
 ];

 const handleVolumeClick = (e) => {
 e.preventDefault();
 setShowVolume(참);
 setTimeout((() => setShowVolume(거짓), 3000);
 };

 const 토글플레이 = () => {
 constifram = 문서.쿼리 선택기('iframe');
 만약 (ifframe) {
 iframe.contentWindow.postMessage(
 JSON.stringify({
 이벤트: '명령',
 func: 재생 중인가요? '비디오 일시 정지' : '비디오 재생'
 }),
 '*'
 );
 setIsPlaying(!is)재생 중);
 }
 };

 const nextTrack = () => {
 setCurrentTrackIndex((이전) => (prev + 1) % tracks.length);
 };

 const prevTrack = () => {
 setCurrentTrackIndex((사전) => (prev - 1 + tracks.length) % tracks.length);
 };

 반품 (
 <div className="w-72 bg-white">
 <div className="p-4">
 <div className="플렉스 항목-중심 정당화-mb-2 사이">
 <div className="상대 플렉스 항목-센터">
 버튼
 OnContextMenu={handleVolumeClick}
 className="p-2 호버:bg-gray-100 반올림"
            >
              <Volume2 size={24} className="text-gray-600" />
            </button>
            
            {showVolume && (
              <div className="absolute left-12 top-1/2 -translate-y-1/2 w-32 h-8 bg-white shadow-lg rounded-lg flex items-center px-2">
                <input
                  type="range"
                  min="0"
                  max="100"
                  value={volume}
                  onChange={(e) => {
                    setVolume(Number(e.target.value));
                    const iframe = document.querySelector('iframe');
                    if (iframe) {
                      iframe.contentWindow.postMessage(
                        JSON.stringify({
                          event: 'command',
                          func: 'setVolume',
                          args: [e.target.value]
                        }),
                        '*'
 );
 }
 }}
 className="w-full"
 />
 </div>
 )}
 </div>
 </div>

 <div className="text-center mb-2">
 <h2 className="폰트-미디어 텍스트-LG 텍스트-gray-800">
 {tracks[currentTrackIndex].이름}
 </h2>
 </div>

 <div className="상대 w-full h-64 mb-4 bg-gray-100 라운드 오버플로-숨김">
 <ifframe
 너비="100%"
 높이="100%"
 src={'https://www.youtube.com/embed/$ {tracks[currentTrackIndex].videoId}?enablejsapi=1&origin=${window.location.origin}'}
 frameBorder="0"
 allow="acceler 측정기; 자동 재생; 클립보드 쓰기; 암호화된 미디어; 자이로스코프; 그림으로 표시"
 전체 화면 허용
 />
 </div>

 <div className="플렉스 플렉스콜 아이템-센터 갭-4">
 <div className="text-center text-sm text-gray-600">
 {tracks[currentTrackIndex].가사}
 </div>
          
 <div className="항목 간 유연한 정당화-중심 w-전체 px-8">
 <Click={prevTrack} className="text-gray-600" 버튼 클릭>
 <스킵백 사이즈={24} />
 </버튼>
 버튼 
 className="w-12 h-12 플렉스 아이템-중심 정당화-중심 원형-전체 테두리-2 테두리-gray-600"
 onClick={togglePlay}
 >
 재생 중인가요?
 <div className="w-4 h-4 border-l-2 border-r-2 border-gray-600" />
 ) : (
 <div className="w-0 h-0 border-t-8 border-t-8 border-l-12 border-l-gray-600 border-b-8 border-b-transpa rent ml-1" />
 )}
 </버튼>
            <button onClick={nextTrack} className="text-gray-600">
              <SkipForward size={24} />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

기본 음악 플레이어 내보내기;
